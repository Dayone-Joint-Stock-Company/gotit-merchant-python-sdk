# coding: utf-8

"""
    Merchant APIs

    Technical document APIs for Merchant APIs

    The version of the OpenAPI document: 6.0
    Contact: duong.vu@gotit.vn
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from GotItMerchantSdkV60.models.response_reserved_schema_v60_data_inner import ResponseReservedSchemaV60DataInner

class TestResponseReservedSchemaV60DataInner(unittest.TestCase):
    """ResponseReservedSchemaV60DataInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResponseReservedSchemaV60DataInner:
        """Test ResponseReservedSchemaV60DataInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResponseReservedSchemaV60DataInner`
        """
        model = ResponseReservedSchemaV60DataInner()
        if include_optional:
            return ResponseReservedSchemaV60DataInner(
                code = '070898022379',
                voucher_type = 'redeemable_sku',
                skus_condition_vi = '',
                skus_condition_en = '',
                redeem_sku = GotItMerchantSdkV60.models.response_check_multiple_schema_v60_data_inner_redeem_sku.ResponseCheckMultipleSchemaV60_data_inner_redeem_sku(
                    redeem_sku_codes = [
                        GotItMerchantSdkV60.models.response_check_multiple_schema_v60_data_inner_redeem_sku_redeem_sku_codes_inner.ResponseCheckMultipleSchemaV60_data_inner_redeem_sku_redeem_sku_codes_inner(
                            sku = 'SKU001', 
                            quantity = 1, 
                            price = 100000, )
                        ], 
                    sku_redemption_value = 10000, ),
                redeemable_skus = [
                    'SKU001'
                    ]
            )
        else:
            return ResponseReservedSchemaV60DataInner(
        )
        """

    def testResponseReservedSchemaV60DataInner(self):
        """Test ResponseReservedSchemaV60DataInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
