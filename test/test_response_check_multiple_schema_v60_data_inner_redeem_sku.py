# coding: utf-8

"""
    Merchant APIs

    Technical document APIs for Merchant APIs

    The version of the OpenAPI document: 6.0
    Contact: duong.vu@gotit.vn
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from GotItMerchantSdkV60.models.response_check_multiple_schema_v60_data_inner_redeem_sku import ResponseCheckMultipleSchemaV60DataInnerRedeemSku

class TestResponseCheckMultipleSchemaV60DataInnerRedeemSku(unittest.TestCase):
    """ResponseCheckMultipleSchemaV60DataInnerRedeemSku unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResponseCheckMultipleSchemaV60DataInnerRedeemSku:
        """Test ResponseCheckMultipleSchemaV60DataInnerRedeemSku
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResponseCheckMultipleSchemaV60DataInnerRedeemSku`
        """
        model = ResponseCheckMultipleSchemaV60DataInnerRedeemSku()
        if include_optional:
            return ResponseCheckMultipleSchemaV60DataInnerRedeemSku(
                redeem_sku_codes = [
                    GotItMerchantSdkV60.models.response_check_multiple_schema_v60_data_inner_redeem_sku_redeem_sku_codes_inner.ResponseCheckMultipleSchemaV60_data_inner_redeem_sku_redeem_sku_codes_inner(
                        sku = 'SKU001', 
                        quantity = 1, 
                        price = 100000, )
                    ],
                sku_redemption_value = 10000
            )
        else:
            return ResponseCheckMultipleSchemaV60DataInnerRedeemSku(
        )
        """

    def testResponseCheckMultipleSchemaV60DataInnerRedeemSku(self):
        """Test ResponseCheckMultipleSchemaV60DataInnerRedeemSku"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
